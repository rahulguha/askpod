 Hello all my name is Krashenaak and welcome to my Yuru Shaval. So guys, recently I had been to that AWS ReInment event where I probably met with many, many founders, many, many amazing people who are specifically working in the field of Genediviad and I have probably planned a list of videos where I probably talk about the tools and amazing frameworks that has been currently being built so that you actually create some amazing Genediviad application. One of those tool and framework is about landfolds. So in this particular video, I will be talking about how you can develop some amazing drag applications with the help of landflow. Now here you don't have to probably do much amount of coding just with the help of drag and drop you can actually create some amazing drag applications. So let's go ahead and let's talk about landflow and here I will be showcasing multiple applications how you can develop drag applications, how you can develop chatbots with the help of landflow and here we are also going to specifically use OpenAI APIs. We will be going step by step with respect to that. So first of all, let's understand what exactly landflow is. You know, landflow, let us take complex product ideas and quickly bring them to life through visual flows that anyone can understand. Now see, one of the major, major, major research work that are probably currently going on with respect to the Genediviad things is basically to create some amazing and efficient drag applications. Now if I talk about landflow, it is a low code tool for developers that make it easier to build powerful AI agents and workflow that can use API model or databases. So here you can also integrate databases like DataStacks and all. Okay. So let's go ahead and probably see this and they also have an amazing documentation over here which you can basically refer from basic prompting to document Q&A to create memory chatbots, simple agent, vector store, rag and many more things. So all these things are available over here. So in our case, what we are basically going to do is that let's go ahead and click on get started for free and you can sign up with GitHub or Google. Okay. So I'll go ahead and sign up with Google. And the best thing about this particular tool is that this tool is completely end to end. You know, so once you probably develop a rag application, you'll also be able to get the API endpoints and you'll be able to directly use it in your Python code. Right. That is the most amazing thing. Right. So here you'll be able to see that we are still logging and here is the documentation which you can specifically use. And in this particular, the most amazing thing about this particular documentation is just given in simple languages and it has also given multiple examples which you can actually see. Okay. Now this is your DataStacks line flow. Now here I've already created three projects but I really want to show you completely from beginning. So let's go ahead and click on the new flow. In the new flow, you have multiple options. You can get started with basic prompting. You can get started with vector store rag. You can also start with a simple agent. So this are the blank flows or you can also start with bank flow wherein you can also put your, you know, you can probably create a chatbot based on your specific requirement. Okay. So over here, what I'm actually going to do is that I'm going to first, first of all, start with basic prompting. Okay. So I'll click over here, click on the basic prompting. And here you can see that so easily this entire graph has been created, you know, the entire, the flow has been created, right. And the best part over here is that you have not written even a single line of code, right. So here you can see in the readme file, you had that you just need to go ahead and add your opening IKE to the open EI model. Then you can also play with this entire chatbot over here. So let's talk more about this particular chatbot. What exactly it is doing. Okay. So here is your chat input, right. You can probably write a text over here. You can provide some prompt. Let's say that over here, a prompt is given that answer the user as if you're a journey expert enthusiast about helping them and getting started building something fresh. And then you'll be able to see that after providing this particular prompt and the chat, we are combining this and we are hitting the opening IKE models. Okay. You can also add other models also. So see over here, if you probably go ahead and see models, you can add EI ML Amazon bedrock and throw pick Azure opening I co hair, Google Genidivi I Grog. There's so many different different models. Let's say that if I probably bring this particular model by just dragging and dropping. So here is my model. Okay. I can also even type the input over here. I can set up my Grog API key over here and all. It is up to you, right. Which model you want to probably use it? Okay. If you think that you don't have an opening API key, you can also go ahead and use web Grog and other things, right. So here is my opening API API key. Sorry, opening I model that we're going to use. The only thing that you need to provide over here is with respect to the model, like what model name you specifically want to use, whether you want to go ahead with GPT for mini or whether you want to go ahead with any other things. Then you also have the opening IKE over here. You just need to provide the opening IKE. So to probably run this entire thing in the playground, I need to go ahead and update the opening IKE. So let me get the opening IKE and let me update it over here. So now I have got my opening IKE. I'll just go ahead and copy it pasted over here and I'll keep the temperature as 0.1. And finally, once I get the input along with the prompt, once it goes and heads the opening I model, that is GPT for O mini, I should be able to get the response over here. So just to execute this, let me just go ahead and click this, run the component over here. And over here, you'll be able to see that this is also running fine. This prompt is also running fine. I'll also go ahead and run this particular opening I model. So here you can step one, step two, step three, it has also got executed just in 1.49 seconds. And finally, I should also be able to see the message. Just I'm just trying to build this entire thing and see that whether everything is working fine. So here I have got the green tick. And this is really, really important for all the people out there because now you can just see that within five minutes how you can amazingly create a drag application without any code. So finally, if you go ahead and click on the playground. So here I will just go ahead and drop a message. Let's say that hello, what is generated way I and you can also test this entire application whether it is working fine or not. So now here you'll be able to see the flow is running and it is also using the opening IKE. And here I get the answer. Hello, I'm thrilled you are interested in generated way such an exciting field generated way refers to the class of artificial intelligence and all that. So let's say if I also want to go ahead and add hey, what is the difference between Jenny I, Jenny I versus what is the difference between Jenny I versus let's say d a planning. If I go ahead and ask this specific question and if I press enter, I should be able to get the entire response. And again, this will be running the entire flow. It will take the chart, it will take the prompt, then it will go to the opening I models and probably interact and give you the output. Right. So this is quite amazing. Here you can see in the playground it is working absolutely fine. Now the next thing is that you can also go ahead and bring the API. As I said that when you are probably developing this entire flow, at the end of the day this entire application gives you the entire API. So you can get the curl API where you can probably hit it like this and you can interact it in the form of chatbot. Then you also have the Python API. You have this entire code which you can specifically run. Just by running this, by creating the environment and required some of the libraries like over here I think you require the language flow library and all. Once you install that with all this particular API URL and all, you should be able to get it. And here you can also see there is something called as application token. This application token you can generate from here. So if you click on generate token, here your application token will get generated. And you can directly use this particular code. You don't have to probably do much and automatically that entire thing will be acting as a chatbot itself. Along with this you also have the Python code. You can also write the Python code wherever you want in the form of modules. And there is also JavaScript API. If you are a JavaScript developer, you want to use it in some kind of websites. You can also use it over here. So perfect. It looks good enough. Let's try some more projects because I have just shown you custom simple chatbot. But I would also like to show you a new one. Let's say I'll go ahead and play it a new one. I'll go to my projects. Let me go ahead and play it a new flow. So here I will also show you the help of vector store rag. So let's click this vector store rag. And now here you can see there is this entire model, the entire flow that has got created automatically. Before, trust me, I have to write a lot of code to create this. So here if I probably consider there are two important flows. One is the data flow because whenever we try to create a rag application, we need to have some kind of PDFs which needs to be stored. All the vectors needs to be stored in some kind of vector database. And as I said, Langflow already provides you that. So that is the most amazing thing over here. So let me just go ahead and see some more options over here. I will just make this as now this looks good. So here what I'm actually going to do is that I will first of all create my entire data flow. Now it says that hey, you have to probably load the file. Load the file to be used in a project. So let me just go ahead and load the file. So let's say I will go ahead and use this attention.pdf. And this attention.pdf is the research paper of transformers. You can probably see this particular PDF. Then the next step that we specifically do while creating the entire rag application is about splitting the text. Now we are using some chunk overlap of 200, chunk size and all. Separator you can use based on your text that you have. Then you have the opening I am meeting. So I will be using some text embeddings three swells for this. You require the opening I P I key. So I've copied and pasted the opening I P I key. Now all this information will be probably stored in some kind of vector database. So that is the reason we are using Astradebio here. Now you may be thinking, Chris, is there only one type of vector database? No, you can also use Astradebi graph, Cassandra, Cassandra graph, Chrome DB, Elasticsearch, FIS, whatever things you basically require. So this in turns combines all the things that is actually required over here. Now let's say that for this current application I am going to use Astradebi. Let's go ahead and use or add our creator new test database. So here I will say that rag example will be my test database name. I will select a provider. Let's say AWS, us to and I will go ahead and create the database. So this also provides you that option of creating the data stack database. Not only that, you have a lot of other options which you want to probably use, you can use it, right? Vector rag and probably in the AWS event I have met with the founders of each and every of this companies and what they are specifically developing. It's quite amazing. There were people, there were technical people who were specifically working. Now once I probably selected the database, the database will get started getting created. Okay. Till this is basically getting created, let's go back to my second model. This is the first model where we had the data flow and this is the second model where we have the retrieve will fall. Now the text will be like what is the document all about. Then I will be getting that particular text over here that text will get converted with the help of OpenAI in meeting. So I need to have the opening IP. As I said, you can also use other one like Grok and all whichever you want. If you want to use some other embedding techniques from Huggin face, you can also use that. Right. Here you have this Astradebi. Now you can go ahead and select the database, but still it is getting created. Rag example is over here. It is getting created. It is going to take time. Then once you have this database, so whatever question you basically ask, you can probably go ahead and interact with the database and get the information. Let's say that you want to use some other agents. Here also you can add agents. Let's say that there is one agent that I want to probably add, you know, and this particular agent model provider, we can probably select whatever model provider we want. And then that agent also you can probably use it over here. So right now I'll just delete this because I don't require it. And then once this is selected, let's see, okay, it is taking some amount of time. But once this is created, then what is happening? Then we go to the parse data. It converts the data into plain text. Then here is a prompt. Prom basically says we are giving a context given the context above answer the following questions as best as possible. So this is what we basically do while creating the rank. And finally it is going to the open AI, which is my final model. You can change your model based on your requirement. And finally you get the chat output, right? So this entire flow is for the retrieval, right? The below flow was for the entire data flow, right? So step by step you have each and everything over here, right? So now you'll be able to see that once this is basically getting created, we just need to go ahead and select this. And after doing that, we just need to probably run this entire flow. Once we run this entire flow, we'll be having the data that will be available in our Azure DB. So let's wait. Okay, now you can see that my database has been created. So I will just go ahead and select this. Okay, so this is what selected everything is ready. But let me go ahead and just run all these things. Okay, so I will run this Azure DB flow. So this will build it. It will take this particular PDF convert that into vector, store it in the Azure DB database, which we have created database over here. I'll also use a new collection name. Okay, so let's say I will say rag. Okay, dimension type I can use one five three six and then we are going to use with the help of cosine similarity. Okay, so once this is created, we will be also creating our collection. So for any database, you definitely require the database name and then you also require the collection name. So let's wait till this is basically getting created. And we have to select the same thing over there. Right? So here you have this rag, I've selected it and here also we have to select that. Right? So once it is done, we are good to go. Now let's run this and once we run this, now this should also become green and it should be running fine. Right? So now in 2.49 seconds, everything is working fine. Now let's run this also so that we will be able to see the output. So we are just trying to build it. Now once this things run, you know, we should be able to see it, you know, yeah, perfect. Now this is running now let's check in the playground. Okay, let me ask the question what is the document all about if I go ahead and ask this. So this I had executed for my previous application anyhow. So now the flow will be running. What is the document all about? So document appears to be the application of print for attention mechanism in neural networks and all. Okay. So explain about attention mechanism. Let's say I'll go ahead and write this and we are going to use the opening. I model again, it is up to you. So I have just asked a question like saying that, hey, please explain me about that engine mechanism and I think it should be done. Now it is interacting with this, right? Interacting with the DB over there. So here is my entire output that I'm able to get it. Right? So this is very good. Who are the researchers, researchers for this paper? Okay. I'm just asking some random questions and it should be able to give you an, you can see that how fast it is. Hardly I'm taking some amount of time to do this. The research paper, these are all these people that is probably written over here, right? So this is good. And if you want to get the API, you can go ahead and get it from the curly API, Python code and anything that you really require. So I hope you like this particular video. This was it from my site. Just imagine developing your rag application five minutes without writing any code with the help of Langflow. So yeah, this was it from my site. I'll see you on the next video. Have a great day. Thank you.